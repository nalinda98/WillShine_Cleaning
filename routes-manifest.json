{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "/Blossom_Property",
  "redirects": [
    {
      "source": "/Blossom_Property/",
      "destination": "/Blossom_Property",
      "basePath": false,
      "internal": true,
      "statusCode": 308,
      "regex": "^/Blossom_Property/$"
    },
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "dynamicRoutes": [
    {
      "page": "/blog/[id]",
      "regex": "^/blog/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/blog/(?<nxtPid>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/about",
      "regex": "^/about(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/about(?:/)?$"
    },
    {
      "page": "/blog",
      "regex": "^/blog(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/blog(?:/)?$"
    },
    {
      "page": "/contact",
      "regex": "^/contact(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/contact(?:/)?$"
    },
    {
      "page": "/service",
      "regex": "^/service(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/service(?:/)?$"
    },
    {
      "page": "/service/carpet-cleaning",
      "regex": "^/service/carpet\\-cleaning(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/service/carpet\\-cleaning(?:/)?$"
    },
    {
      "page": "/service/office-cleaning",
      "regex": "^/service/office\\-cleaning(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/service/office\\-cleaning(?:/)?$"
    },
    {
      "page": "/service/pressure-washing",
      "regex": "^/service/pressure\\-washing(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/service/pressure\\-washing(?:/)?$"
    },
    {
      "page": "/service/stripping-and-sealing",
      "regex": "^/service/stripping\\-and\\-sealing(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/service/stripping\\-and\\-sealing(?:/)?$"
    },
    {
      "page": "/single-blog",
      "regex": "^/single\\-blog(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/single\\-blog(?:/)?$"
    },
    {
      "page": "/single-service",
      "regex": "^/single\\-service(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/single\\-service(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": {
    "beforeFiles": [
      {
        "source": "/Blossom_Property//_next/:path+",
        "destination": "/Blossom_Property/_next/:path+",
        "regex": "^/Blossom_Property//_next(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))(?:/)?$"
      }
    ],
    "afterFiles": [],
    "fallback": []
  }
}